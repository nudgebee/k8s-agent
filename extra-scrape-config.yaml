prometheus:
  additionalPrometheusRulesMap:
    kubernetes-apps:
      groups:
      - name: kubernetes-apps
        rules:
          - alert: KubeHpaMaxedOut
            expr: |-
              kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"} 
                == 
              kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics"} > 1
            for: 15m
            labels:
              severity: warning
            annotations:
              description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.
              summary: HPA is running at max replicas
          - alert: HighErrorCriticalLogs
            expr: sum(container_log_messages_total{level=~"error|critical", container_id!~".*(prometheus|grafana|kube-system|nudgebee-agent|containerd|kubelet|keda).*"}) by (container_id, sample) > 1
            for: 5m
            annotations:
              summary: "High error and critical log messages"
              description: |
                The total count of container log messages with error or critical level is higher for the past 5 minutes, grouped by container_id.
                Container ID: {{ $labels.container_id }}
                Log Sample: {{ $labels.sample }}
                Failure Count: {{ printf "%.0f" $value }}
            labels:
              severity: critical
          - alert: ApplicationAPIFailures
            expr: sum(container_http_requests_total{container_id!~".*(prometheus|grafana|kube-system|nudgebee-agent|containerd|kubelet|keda|karpenter).*", status=~"5..|4.."}) by (container_id, path, method, status, destination, actual_destination) > 1
            for: 5m
            annotations:
              summary: "High API Failures"
              description: |
                Application reported API failure 
                Container ID: {{ $labels.container_id }}
                Request Path: {{ $labels.path }}
                Request Method: {{ $labels.method }}
                Failure Count: {{ printf "%.0f" $value }}
            labels:
              severity: critical  
          - alert: KubePodStuckTerminating
            expr: count(kube_pod_deletion_timestamp) by (namespace, pod) * count(kube_pod_status_reason{reason="NodeLost"} == 0) by (namespace, pod) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod stuck in terminating state"
              description: "Pod {{$labels.namespace}}/{{$labels.pod}} blocked in Terminating state."
  prometheusSpec:
    additionalScrapeConfigs: |
      - job_name: opencost
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        dns_sd_configs:
        - names:
          - opencost.opencost
          type: 'A'
          port: 9003
      - job_name: 'nudgebee-node-agent'
        honor_labels: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
            action: keep
            regex: true
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow ]
            action: drop
            regex: true
          - source_labels: [ __meta_kubernetes_pod_label_app]
            action: keep
            regex: nudgebee-node-agent
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
            action: replace
            regex: (https?)
            target_label: __scheme__
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
            action: replace
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [ __meta_kubernetes_pod_phase ]
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: instance
            action: replace
        