apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nudgebee-agent.fullname" . }}-runner
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nudgebee-agent.labels" . | nindent 4 }}
    component: runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "nudgebee-agent.fullname" . }}-runner
  template:
    metadata:
      labels:
        {{- include "nudgebee-agent.labels" . | nindent 8 }}
        app: {{ include "nudgebee-agent.fullname" . }}-runner
        component: runner
        nudgebeeComponent: "runner"
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- if or .Values.runner.annotations .Values.globalConfig.custom_annotations }}
        {{- if .Values.runner.annotations}} {{ toYaml .Values.runner.annotations | nindent 8 }}
        {{- end }}
        {{- if .Values.globalConfig.custom_annotations }} {{ toYaml .Values.globalConfig.custom_annotations | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "nudgebee-agent.fullname" . }}-runner-service-account
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.runner.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.runner.imagePullSecrets | nindent 6 }}
      {{- end }}
      containers:
      - name: runner
        image: "{{ .Values.runner.image.repository }}:{{ .Values.runner.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.runner.imagePullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
        env:
          - name: PLAYBOOKS_CONFIG_FILE_PATH
            value: /etc/robusta/config/active_playbooks.yaml
          - name: RELEASE_NAME
            value: {{ .Release.Name | quote }}
          - name: PROMETHEUS_ENABLED
            value: {{ .Values.enablePrometheusStack | quote}}
          - name: SEND_ADDITIONAL_TELEMETRY
            value: {{ .Values.runner.sendAdditionalTelemetry | quote }}
          - name: LOG_LEVEL
            value: {{ .Values.runner.log_level }}
          - name: INSTALLATION_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.disableCloudRouting }}
          - name: CLOUD_ROUTING
            value: "False"
          {{- end }}
          {{- if not .Values.monitorHelmReleases }}
          - name: DISABLE_HELM_MONITORING
            value: "True"
          {{- end }}
          {{- if .Values.scaleAlertsProcessing }}
          - name: ALERTS_WORKERS_POOL
            value: "True"
          {{- end }}
          - name: RUNNER_VERSION
            value: {{ .Chart.AppVersion }}
          - name: KRR_IMAGE_OVERRIDE
            value: {{ .Values.runner.krr_image_override }}
          - name: IMAGE_REGISTRY
            value: {{ .Values.runner.image_registry }}
          - name: WEBSOCKET_RELAY_ADDRESS
            value: {{ .Values.runner.relay_address }}
          - name: PROFILE_IMAGE_TAG_OVERRIDE
            value: {{ .Values.runner.profiler_image_override }}
          - name: KUBEPUG_IMAGE_OVERRIDE
            value: {{ .Values.runner.kubepug_image_override }}
          - name: NOVA_IMAGE_OVERRIDE
            value: {{ .Values.runner.nova_image_override }}
          - name: RUNBOOK_SIDECAR_IMAGE
            value: {{ .Values.runner.image_registry }}/nudgebee_runbook_sidecar_agent:{{ .Values.runner.runbook_sidecar_image_tag }}
          {{- if .Values.runner.victoria_metrics_enabled }}
          - name: VICTORIA_METRICS_CONFIGURED
            value: "True"
          {{- end }}
          {{- if and .Values.runner.clickhouse_enabled .Values.runner.clickhouse_secret }}
          - name: CLICKHOUSE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "nudgebee-agent.clickhouse.servicename" . }}
                key: admin-password
          {{- end }}
          {{- if kindIs "string" .Values.runner.additional_env_vars }}
          {{- fail "The `additional_env_vars` string value is deprecated. Change the `additional_env_vars` value to an array" -}}
          {{- end }}
          {{- if .Values.runner.additional_env_vars }}
          {{ toYaml .Values.runner.additional_env_vars | nindent 10 }}
          {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "nudgebee-agent.fullname" . }}-runner-secret
            optional: true
        {{- if .Values.runner.additional_env_froms }}
        {{ toYaml .Values.runner.additional_env_froms | nindent  }}
        {{- end }}
        volumeMounts:
          - name: auth-config-secret
            mountPath: /etc/robusta/auth
          - name: playbooks-config-secret
            mountPath: /etc/robusta/config
          {{- if .Values.playbooksPersistentVolume }}
          - name: persistent-playbooks-storage
            mountPath: /etc/robusta/playbooks/storage
          {{- end }}
          {{- with .Values.runner.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}  
        lifecycle:
          preStop:
            exec:
              command: ["bash", "-c", "kill -SIGINT 1"]
        resources:
          requests:
            cpu: {{ .Values.runner.resources.requests.cpu }}
            memory: {{ if .Values.isSmallCluster }}"512Mi"{{ else }}{{ .Values.runner.resources.requests.memory | quote }}{{ end }}
          limits:
            {{ if .Values.runner.resources.limits.memory }}memory: {{ if .Values.isSmallCluster }}"512Mi"{{ else if .Values.runner.resources.limits.memory }}{{ .Values.runner.resources.limits.memory | quote }}{{ else }}{{ .Values.runner.resources.requests.memory | quote }}{{ end }}
            {{ end }}
            {{ if .Values.runner.resources.limits.cpu }}cpu: {{ .Values.runner.resources.limits.cpu | quote }}{{ end }}
      {{- if .Values.grafanaRenderer.enableContainer }}
      - name: grafana-renderer
        image: {{ .Values.grafanaRenderer.image }}
        imagePullPolicy: {{ .Values.grafanaRenderer.imagePullPolicy }}
        securityContext:
          privileged: false
        lifecycle:
          preStop:
            exec:
              command: ["bash", "-c", "kill -SIGINT 1"]
        resources:
          requests:
            cpu: {{ .Values.grafanaRenderer.resources.requests.cpu }}
            memory: {{ if .Values.isSmallCluster }}"64Mi"{{ else }}{{ .Values.grafanaRenderer.resources.requests.memory | quote }}{{ end }}
          limits:
            memory: {{ if .Values.isSmallCluster }}"64Mi"{{ else if .Values.grafanaRenderer.resources.limits.memory }}{{ .Values.grafanaRenderer.resources.limits.memory | quote }}{{ else }}{{ .Values.grafanaRenderer.resources.requests.memory | quote }}{{ end }}
            {{ if .Values.grafanaRenderer.resources.limits.cpu }}cpu: {{ .Values.grafanaRenderer.resources.limits.cpu | quote }}{{ end }}
      {{- end }}
      volumes:
        - name: playbooks-config-secret
          secret:
            secretName: {{ include "nudgebee-agent.fullname" . }}-playbooks-config-secret
            optional: true
        - name: auth-config-secret
          secret:
            secretName: {{ include "nudgebee-agent.fullname" . }}-auth-config-secret
            optional: true
        {{- if .Values.playbooksPersistentVolume }}
        - name: persistent-playbooks-storage
          persistentVolumeClaim:
            claimName: persistent-playbooks-pv-claim
        {{- end }}
        {{- with .Values.runner.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.runner.nodeSelector }}
      nodeSelector: {{ toYaml .Values.runner.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.affinity }}
      affinity: {{ toYaml .Values.runner.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.runner.tolerations }}
      tolerations:  {{ toYaml .Values.runner.tolerations | nindent 8 }}
      {{- end }}
{{- if .Values.playbooksPersistentVolume }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: persistent-playbooks-pv-claim
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ if .Values.isSmallCluster }}"512Mi"{{ else }}{{ .Values.playbooksPersistentVolumeSize }}{{ end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nudgebee-agent.fullname" . }}-runner
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nudgebee-agent.labels" . | nindent 4 }}
    component: runner
    target: {{ include "nudgebee-agent.fullname" . }}-runner
spec:
  selector:
    {{- include "nudgebee-agent.selectorLabels" . | nindent 4 }}
    component: runner
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000
---
{{ if and (.Values.enableServiceMonitors) (or (.Values.enablePrometheusStack) (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1/ServiceMonitor") ) }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "nudgebee-agent.fullname" . }}-runner-service-monitor
  labels:
    # this label is how the Prometheus installed with Robusta finds ServiceMonitors
    # TODO: we probably need to add custom labels here for a Prometheus installed separately
    release: {{ .Release.Name }}
spec:
  endpoints:
    - path: /metrics
      port: http
  selector:
    matchLabels:
      app: {{ include "nudgebee-agent.fullname" . }}-runner
  targetLabels:
    - target
{{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nudgebee-agent.fullname" . }}-runner-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  {{ if .Values.runner.sentry_dsn }}
  SENTRY_DSN: {{ .Values.runner.sentry_dsn }}
  {{ end }}
  NUDGEBEE_ENDPOINT: {{ .Values.runner.nudgebee.endpoint }}
  NUDGEBEE_AUTH_SECRET_KEY: {{ .Values.runner.nudgebee.auth_secret_key }}
  PUBLISHING_WINDOW: {{ .Values.runner.nudgebee.publish_window | quote }}
  {{ if .Values.runner.grafana.password }}
  GRAFANA_PASSWORD: {{ .Values.runner.grafana.password | quote }}
  {{ end }}
  {{ if .Values.runner.grafana.apikey }}
  GRAFANA_APIKEY: {{ .Values.runner.grafana.apikey | quote }}
  {{ end }}
  {{ if .Values.runner.grafana.username }}
  GRAFANA_USERNAME: {{ .Values.runner.grafana.username | quote }}
  {{ end }}
  {{ if .Values.runner.grafana.url }}
  GRAFANA_URL: {{ .Values.runner.grafana.url | quote }}
  {{ end }}
  {{ if .Values.runner.grafana.enabled }}
  GRAFANA_ENABLED: "True"
  {{ end }}
  {{ if .Values.runner.grafana.extra_headers }}
  GRAFANA_EXTRA_HEADER: {{ .Values.runner.grafana.extra_headers | quote }}
  {{ end }}
  {{- if .Values.runner.loki.url }}
  LOKI_URL: {{ .Values.runner.loki.url }}
  {{- end }}
  {{- if .Values.runner.loki.username }}
  LOKI_USERNAME: {{ .Values.runner.loki.username }}
  {{- end }}
  {{- if .Values.runner.loki.password }}
  LOKI_PASSWORD: {{ .Values.runner.loki.password }}
  {{- end }}
  {{- if .Values.runner.loki.headers }}
  LOKI_EXTRA_HEADER: {{ .Values.runner.loki.headers }}
  {{- end }}
  {{- if .Values.runner.es.url }}
  ELASTICSEARCH_URL: {{ .Values.runner.es.url }}
  {{- end }}
  {{- if .Values.runner.es.password }}
  ELASTICSEARCH_PASSWORD: {{ .Values.runner.es.password }}
  {{- end }}
  {{- if .Values.runner.es.username }}
  ELASTICSEARCH_USERNAME: {{ .Values.runner.es.username }}
  {{- end }}
  {{- if .Values.runner.es.headers }}
  ELASTICSEARCH_HEADER: {{ .Values.runner.es.headers }}
  {{- end }}
  {{- if .Values.runner.es.apiKey }}
  ELASTICSEARCH_APIKEY: {{ .Values.runner.es.apiKey }}
  {{- end }}
  {{- if .Values.runner.es.use_ssl }}
  ELASTICSEARCH_SSL_ENABLED: "True"
  {{- end }}
  {{- if .Values.runner.es.verify_cert }}
  ELASTICSEARCH_SSL_VERIFY: "True"
  {{- end }}
  {{- if .Values.runner.es.enabled }}
  ELASTICSEARCH_ENABLED: "True"
  {{- end }}
  {{- if .Values.runner.signoz.enabled }}
  SIGNOZ_ENABLED: "True"
  {{- end }}
  {{- if .Values.runner.signoz.apiKey }}
  SIGNOZ_API_KEY:  {{ .Values.runner.signoz.apiKey }}
  {{- end }}
  {{- if .Values.runner.signoz.url }}
  SIGNOZ_URL: {{ .Values.runner.signoz.url }}
  {{- end }}
  {{- if .Values.runner.signoz.user_email }}
  SIGNOZ_USER: {{ .Values.runner.signoz.user_email }}
  {{- end }}
  {{- if .Values.runner.signoz.user_password }}
  SIGNOZ_PASSWORD: {{ .Values.runner.signoz.user_password }}
  {{- end }}]
  CLICKHOUSE_ENABLED: "{{ if index .Values "opentelemetry-collector" "enabled" }}True{{ else if .Values.runner.clickhouse_enabled }}True{{ else }}False{{ end }}"
  {{- if and .Values.runner.clickhouse_enabled .Values.runner.clickhouse_password }}
  CLICKHOUSE_PASSWORD: {{ .Values.runner.clickhouse_password }}
  {{- end }}
  {{- if and .Values.runner.trace_table .Values.runner.trace_table }}
  TRACE_TABLE: {{ .Values.runner.trace_table }}
  {{- end }}
