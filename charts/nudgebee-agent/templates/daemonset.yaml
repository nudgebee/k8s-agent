{{- if and .Values.nodeAgent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nudgebee-agent.fullname" . }}-node-agent
  labels:
    {{- include "nudgebee-agent.labels" . | nindent 4 }}
    component: node-agent
spec:
  selector:
    matchLabels:
      {{- include "node-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "node-agent.selectorLabels" . | nindent 8 }}
        component: node-agent
        app: nudgebee-node-agent
      annotations:
        {{- if .Values.nodeAgent.podAnnotations }}
        {{ toYaml .Values.nodeAgent.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.globalConfig.custom_annotations }}
        {{ toYaml .Values.globalConfig.custom_annotations | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '80'
    spec:
      serviceAccountName: {{ include "nudgebee-agent.fullname" . }}-runner-service-account
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        - operator: Exists
      priorityClassName: "{{ .Values.priorityClassName }}"
      hostPID: true
      containers:
        - name: node-agent
          image: "{{ .Values.nodeAgent.image.repository }}:{{ .Values.nodeAgent.image.tag }}"
          command: ["coroot-node-agent", "--cgroupfs-root", "/host/sys/fs/cgroup"]
          imagePullPolicy: {{ .Values.nodeAgent.image.pullPolicy }}
          resources:
            {{- toYaml .Values.nodeAgent.resources | nindent 12 }}
          env:
          {{- if index .Values "opentelemetry-collector" "enabled" }}
            - name: TRACES_ENDPOINT
              value: "http://{{ include "nudgebee-agent.otelcollector.servicename" . }}:4318/v1/traces"
          {{- end }}
          {{- if .Values.nodeAgent.logsEndpoint }}
            - name: LOGS_ENDPOINT
              value: "{{ .Values.nodeAgent.logsEndpoint }}"
          {{- end }}
          {{- if and .Values.nodeAgent.profilesEndpoint }}
            - name: PROFILES_ENDPOINT
              value: "{{ .Values.nodeAgent.profilesEndpoint }}"
          {{- end }}
          {{- if .Values.nodeAgent.metricsEndpoint }}
            - name: METRICS_ENDPOINT
              value: "{{ .Values.nodeAgent.metricsEndpoint }}"
          {{- end }}
          {{- if .Values.nodeAgent.scrapeInterval }}
            - name: SCRAPE_INTERVAL
              value: "{{ .Values.nodeAgent.scrapeInterval }}"
          {{- end }}
          {{- if .Values.nodeAgent.apiKey }}
            - name: API_KEY
              value: "{{ .Values.apiKey }}"
          {{- end }}
          {{- with .Values.nodeAgent.env }}
          {{- . | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 80
              name: http
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /host/sys/fs/cgroup
              name: cgroupfs
              readOnly: true
            - mountPath: /sys/kernel/debug
              name: debugfs
              readOnly: false
      volumes:
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroupfs
        - hostPath:
            path: /sys/kernel/debug
          name: debugfs
{{- end }}